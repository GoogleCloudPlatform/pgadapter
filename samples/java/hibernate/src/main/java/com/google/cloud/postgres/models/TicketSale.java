// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package com.google.cloud.postgres.models;

import com.google.cloud.spanner.hibernate.PooledBitReversedSequenceStyleGenerator;
import io.hypersistence.utils.hibernate.type.array.ListArrayType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import java.math.BigDecimal;
import java.util.List;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.hibernate.id.enhanced.SequenceStyleGenerator;

/**
 * This entity uses a bit-reversed sequence to generate a primary key. The strategy it uses is
 * compatible with Hibernate batching.
 *
 * <p>The ID generator it uses is defined in this dependency:
 *
 * <pre>{@code
 * <dependency>
 *   <groupId>com.google.cloud</groupId>
 *   <artifactId>google-cloud-spanner-hibernate-tools</artifactId>
 * </dependency>
 * }</pre>
 *
 * <p>The table and sequence definition that is used for this entity can be found in the file
 * resources/sample-schema.sql
 */
@Table(name = "ticket_sales")
@Entity
public class TicketSale {
  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ticketSaleId")
  @GenericGenerator(
      // This is the name of the generator, not the name of the sequence. This name must correspond
      // with the name given in the @GeneratedValue above.
      name = "ticketSaleId",
      // Use this custom strategy to ensure the use of a bit-reversed sequence that is compatible
      // with batching multiple inserts. See also
      // https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#batch.
      type = PooledBitReversedSequenceStyleGenerator.class,
      parameters = {
        // Use a separate sequence name for each entity.
        // See resources/db.changelog-v1.1.sql file for the sequence definition in the database.
        @Parameter(name = SequenceStyleGenerator.SEQUENCE_PARAM, value = "ticket_sale_seq"),
        // The increment_size is not actually set on the sequence that is created, but is used to
        // generate a SELECT query that fetches this number of identifiers at once.
        @Parameter(name = SequenceStyleGenerator.INCREMENT_PARAM, value = "50"),
        @Parameter(name = SequenceStyleGenerator.INITIAL_PARAM, value = "50000"),
        // Add any range that should be excluded by the generator if your table already
        // contains existing values that have been generated by other generators.
        @Parameter(
            name = PooledBitReversedSequenceStyleGenerator.EXCLUDE_RANGE_PARAM,
            value = "[1,1000]"),
      })
  public Long id;

  @ManyToOne(optional = false, fetch = FetchType.LAZY)
  private Concerts concert;

  @Column(name = "customer_name")
  private String customerName;

  private BigDecimal price;

  /**
   * This column is mapped to a text[] column in the database. The {@link ListArrayType} is defined
   * in the hypersistence-utils-hibernate-63 library. Add the following to your pom.xml to use it:
   *
   * <pre>{@code
   * <dependency>
   *   <groupId>io.hypersistence</groupId>
   *   <artifactId>hypersistence-utils-hibernate-63</artifactId>
   *   <version>3.7.2</version>
   * </dependency>
   * }</pre>
   */
  @Type(ListArrayType.class)
  @Column(columnDefinition = "_varchar")
  private List<String> seats;

  public TicketSale() {}

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Concerts getConcert() {
    return concert;
  }

  public void setConcert(Concerts concert) {
    this.concert = concert;
  }

  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }

  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public List<String> getSeats() {
    return seats;
  }

  public void setSeats(List<String> seats) {
    this.seats = seats;
  }
}

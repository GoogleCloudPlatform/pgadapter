
# --- TPCC PROPERTIES --- #

# The number of warehouses in the database. This is commonly known as the 'factor'. Increasing this
# number also increases the number of dependent records (districts, customers, orders, ...).
tpcc.warehouses=10

# The number of districts per warehouse, customers per district, etc. These numbers should not be
# modified if you want to use a standard tpc-c model.
tpcc.districts-per-warehouse=10
tpcc.customers-per-district=3000


# The number of items that can be bought. This number does not scale with the number of warehouses.
# 100,000 is the number of items that is specified by the tpc-c standard.
tpcc.item-count=100000

# Change these to match your Cloud Spanner PostgreSQL-dialect database.
#spanner.project=my-project
#spanner.instance=my-instance
#spanner.database=my-database

spanner.project=appdev-soda-spanner-staging
spanner.instance=knut-test-ycsb
spanner.database=tpcc


# --- IN-PROCESS PGADAPTER --- #

# These configuration properties are only relevant if you run an in-process PGAdapter instance.

# Set this to true to instruct the benchmark runner to start a PGAdapter instance in-process with
# the benchmark application.
pgadapter.in-process=true

# Set this if you want the in-process PGAdapter instance to use a specific service account
# credentials file.
# Leave unset if the application should use the APPLICATION_DEFAULT_CREDENTIALS.
#pgadapter.credentials=/path/to/service-account.json
pgadapter.credentials=/Users/loite/Downloads/appdev-soda-spanner-staging.json

# --- EXTERNAL PGADAPTER --- #

# Set these properties to use an out-of-process PGAdapter instance. You must start this instance
# before running the benchmark.
pgadapter.host=localhost
pgadapter.port=5432

# This connection URL is built automatically from the properties above and should normally not be
# changed. Note that the application uses the PostgreSQL simple query protocol, so it
# can explicitly create prepared statements on PGAdapter.
pgadapter.connection-url=jdbc:postgresql://${pgadapter.host}:${pgadapter.port}/projects%2F${spanner.project}%2Finstances%2F${spanner.instance}%2Fdatabases%2F${spanner.database}?preferQueryMode=simple

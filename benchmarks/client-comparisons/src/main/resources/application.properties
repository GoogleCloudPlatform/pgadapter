
# --- LOGGING PROPERTIES --- #
logging.file.name=benchmark-log.log
# Turn off console logging, so you can actually read the output.
logging.threshold.console=OFF

# --- BENCHMARK PROPERTIES --- #

# Load the initial data set.
benchmark.load-data=false
benchmark.load-data-threads=32
# Truncates all existing data before loading new data. This setting only has any effect when
# tpcc.load-data also has been enabled.
benchmark.truncate-before-load=true

# Run the various benchmarks.
benchmark.run-pgadapter-benchmark=true
benchmark.run-jdbc-benchmark=true
benchmark.run-spanner-benchmark=true
# The max duration that the benchmark should run in ISO-8601 notation.
# E.g. PT60S (60 seconds), PT10M (10 minutes), PT2H (2 hours), P1D (1 day)
benchmark.benchmark-duration=PT300S

# The number of rows to load into the benchmark table.
benchmark.record-count=1000
# The number of iterations that each benchmark should run.
# A higher number means a longer execution time, but gives a better indication of how the
# performance will be over time.
benchmark.iterations=100
# The maximum random wait time between each iteration. The average wait time will be half this
# value. Set this value to PT0S to disable any wait times between iterations.
benchmark.max-random-wait=PT0S
# The number of parallel clients to use for benchmarks.
benchmark.parallelism=4
# The benchmarks to run
benchmark.benchmarks=SelectOneRowAutoCommit,Select100RowsAutoCommit,SelectOneRowTransaction,Select100RowsTransaction

# --- Possible optimizations for TPC-C --- #
benchmark.use-read-only-transactions=false
benchmark.lock-scanned-ranges=false

# Change these to match your Cloud Spanner PostgreSQL-dialect database.
spanner.project=appdev-soda-spanner-staging
spanner.instance=knut-test-ycsb
spanner.database=knut-test-db


# --- IN-PROCESS PGADAPTER --- #

# These configuration properties are only relevant if you run an in-process PGAdapter instance.

# Set this to true to instruct the benchmark runner to start a PGAdapter instance in-process with
# the benchmark application.
pgadapter.in-process=true
pgadapter.num-channels=4

# Set this if you want the in-process PGAdapter instance to use a specific service account
# credentials file.
# Leave unset if the application should use the APPLICATION_DEFAULT_CREDENTIALS.
pgadapter.credentials=/Users/loite/Downloads/appdev-soda-spanner-staging.json

# Set this to true to disable automatic retries of aborted transactions by PGAdapter. Disabling this
# will propagate all aborted transaction errors to the application, and the transaction will be
# marked as failed instead of aborted.
pgadapter.disable-internal-retries=false

# PGAdapter OpenTelemetry settings.
pgadapter.enable-open-telemetry=false
pgadapter.open-telemetry-sample-rate=1

# --- EXTERNAL PGADAPTER --- #

# Set these properties to use an out-of-process PGAdapter instance. You must start this instance
# before running the benchmark.
pgadapter.host=localhost
pgadapter.port=5432

# This connection URL is built automatically from the properties above and should normally not be
# changed. Note that the application uses the PostgreSQL simple query protocol, so it
# can explicitly create prepared statements on PGAdapter.
pgadapter.connection-url=jdbc:postgresql://${pgadapter.host}:${pgadapter.port}/projects%2F${spanner.project}%2Finstances%2F${spanner.instance}%2Fdatabases%2F${spanner.database}?preferQueryMode=simple

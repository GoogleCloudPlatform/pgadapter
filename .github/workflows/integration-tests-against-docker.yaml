on:
  # This allows manual activation of this action for testing.
  workflow_dispatch:
  pull_request:
    branches: [ postgresql-dialect ]
name: integration-tests-against-docker
jobs:
  integration_tests:
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ""
      GOOGLE_CLOUD_INSTANCE: "pgadapter-testing"
      GOOGLE_CLOUD_DATABASE: "e2e_docker"
      GOOGLE_CLOUD_ENDPOINT: "spanner.googleapis.com"
      DOCKERFILE: "build/Dockerfile.ci"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.JSON_SERVICE_ACCOUNT_CREDENTIALS }}'
          export_environment_variables: true
      - name: Randomize database name
        run: echo GOOGLE_CLOUD_DATABASE=${GOOGLE_CLOUD_DATABASE}_$(date +%s) >> $GITHUB_ENV
      - name: Build Docker image
        run: docker build . -f build/Dockerfile -t pgadapter
      - name: Start Docker container
        run: docker run \
                -d -p 5432:5432 \
                -v ${{GOOGLE_APPLICATION_CREDENTIALS}}:/credentials.json:ro \
                -e GOOGLE_APPLICATION_CREDENTIALS=/credentials.json \
                pgadapter \
                -p ${GOOGLE_CLOUD_PROJECT} -i ${GOOGLE_CLOUD_INSTANCE} -d ${GOOGLE_CLOUD_DATABASE} \
                -x
      - name: Run integration tests
        run: mvn verify \
                -Dclirr.skip=true \
                -DskipITs=false \
                -DPG_ADAPTER_ADDRESS="localhost" \
                -DPG_ADAPTER_LOCAL_PORT="5432" \
                -DPG_ADAPTER_DATABASE="${GOOGLE_CLOUD_DATABASE}"

on:
  pull_request:
  schedule:
    # Run at 04:52UTC every day
    - cron: '52 4 * * *'
  workflow_dispatch:
    inputs:
      endpoint:
        description: "The Spanner endpoint to use for the tests"
        required: false
        type: choice
        options:
          - staging-wrenchworks.sandbox.googleapis.com
          - preprod-spanner.sandbox.googleapis.com
name: integration
env:
  GOOGLE_CLOUD_PROJECT: "span-cloud-testing"
  GOOGLE_CLOUD_INSTANCE: "pgadapter-testing"
  GOOGLE_CLOUD_DATABASE: "testdb_integration"
  GOOGLE_CLOUD_ENDPOINT: "spanner.googleapis.com"
jobs:
  check-env:
    outputs:
      has-key: ${{ steps.project-id.outputs.defined }}
    runs-on: ubuntu-latest
    steps:
      - id: project-id
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        if: "${{ env.GCP_PROJECT_ID != '' }}"
        run: echo "::set-output name=defined::true"
  integration-test:
    needs: [check-env]
    if: needs.check-env.outputs.has-key == 'true'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - id: set-manual-endpoint
        if: "${{ inputs.endpoint }}"
        run: |
          echo "GOOGLE_CLOUD_ENDPOINT=${{ inputs.endpoint }}" >> $GITHUB_ENV
      - id: set-scheduled-endpoint
        if: github.event.schedule=='52 4 * * *'
        run: |
          echo "GOOGLE_CLOUD_ENDPOINT=preprod-spanner.sandbox.googleapis.com" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 8
      - run: java -version
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.17.7'
      - run: go version
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: python --version
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: pip install -r ./src/test/python/requirements.txt
      - name: Run unit tests
        run: mvn test -B -Ptest-all
      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
          export_default_credentials: true
      - name: Run integration tests
        run: mvn verify -B -Dclirr.skip=true -DskipITs=false -DPG_ADAPTER_HOST="https://$GOOGLE_CLOUD_ENDPOINT" -DPG_ADAPTER_INSTANCE="$GOOGLE_CLOUD_INSTANCE" -DPG_ADAPTER_DATABASE="$GOOGLE_CLOUD_DATABASE"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./target/site/jacoco-merged-test-coverage-report
          fail_ci_if_error: true
          flags: all_tests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true

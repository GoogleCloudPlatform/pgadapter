on:
  push:
    branches:
    - main
  pull_request:
name: ci
env:
  GOOGLE_CLOUD_PROJECT: "span-cloud-testing"
  GOOGLE_CLOUD_INSTANCE: "pgadapter-testing"
  GOOGLE_CLOUD_DATABASE: "testdb_e2e_psql"
  GOOGLE_CLOUD_ENDPOINT: "spanner.googleapis.com"
  DOCKERFILE: "build/Dockerfile.ci"
  DOCKER_HOSTNAME: "us-west1-docker.pkg.dev"
  DOCKER_REPOSITORY: "spangres-artifacts-docker"
  DOCKER_IMAGE: "google-cloud-spanner-pgadapter"
  UBER_JAR_GCS_BUCKET: "spanner-client-libraries-test"
  UBER_JAR_GCS_PATH: "postgres"
  JSON_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
jobs:
  units:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: ${{matrix.java}}
    - run: java -version
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.17.7'
    - run: go version
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - run: python --version
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        cache: 'pip'
    - run: pip install -r ./src/test/python/requirements.txt
    - uses: actions/checkout@v3
    - name: Install pipenv
      run: pip3 install pipenv
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        cache: 'pipenv'
    - run: cd ./src/test/python && pipenv install && pipenv shell && python3 -c "import psycopg2"
    - run: .ci/run-with-credentials.sh units

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: java -version
    - run: .ci/run-with-credentials.sh lint
  clirr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: java -version
      - run: .ci/run-with-credentials.sh clirr
  e2e-psql-v11:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: java -version
    - name: "Install postgresql-client-11"
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install postgresql-client-11
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ env.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
        export_default_credentials: true
    - name: "Install gcloud alpha component"
      run: gcloud components install alpha
    - run: .ci/run-with-credentials.sh uber-jar-build
    - run: .ci/run-with-credentials.sh e2e-psql 11
  e2e-psql-v12:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: java -version
    - name: "Install postgresql-client-12"
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install postgresql-client-12
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ env.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
        export_default_credentials: true
    - name: "Install gcloud alpha component"
      run: gcloud components install alpha
    - run: .ci/run-with-credentials.sh uber-jar-build
    - run: .ci/run-with-credentials.sh e2e-psql 12
  e2e-psql-v13:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: java -version
    - name: "Install postgresql-client-13"
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install postgresql-client-13
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ env.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
        export_default_credentials: true
    - name: "Install gcloud alpha component"
      run: gcloud components install alpha
    - run: .ci/run-with-credentials.sh uber-jar-build
    - run: .ci/run-with-credentials.sh e2e-psql 13
  e2e-psql-v14:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: java -version
    - name: "Install postgresql-client-14"
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install postgresql-client-14
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ env.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
        export_default_credentials: true
    - name: "Install gcloud alpha component"
      run: gcloud components install alpha
    - run: .ci/run-with-credentials.sh uber-jar-build
    - run: .ci/run-with-credentials.sh e2e-psql 14
  release-docker:
    runs-on: ubuntu-latest
    # Only releases on the postgresql-dialect branch
    if: github.head_ref == 'postgresql-dialect'
    needs: [ units, lint, clirr, e2e-psql-v11, e2e-psql-v12, e2e-psql-v13 ]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 8
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ env.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
        export_default_credentials: true
    - run: java -version
    - run: .ci/run-with-credentials.sh uber-jar-build
    - run: .ci/run-with-credentials.sh docker-configure
    - run: .ci/run-with-credentials.sh docker-build
    - run: .ci/run-with-credentials.sh docker-push
  release-uber-jar:
    runs-on: ubuntu-latest
    # Only releases on the postgresql-dialect branch
    if: github.head_ref == 'postgresql-dialect'
    needs: [ units, lint, clirr, e2e-psql-v11, e2e-psql-v12, e2e-psql-v13 ]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 8
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ env.JSON_SERVICE_ACCOUNT_CREDENTIALS }}
        export_default_credentials: true
    - run: java -version
    - run: .ci/run-with-credentials.sh uber-jar-build
    - run: .ci/run-with-credentials.sh uber-jar-release

/* Generated By:JJTree&JavaCC: Do not edit this line. CopyConstants.java */
package com.google.cloud.spanner.pgadapter.parsers.copy;

/** Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start() */
public interface CopyConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_STDIN = 7;
  /** RegularExpression Id. */
  int K_STDOUT = 8;
  /** RegularExpression Id. */
  int K_TO = 9;
  /** RegularExpression Id. */
  int K_FROM = 10;
  /** RegularExpression Id. */
  int K_COPY = 11;
  /** RegularExpression Id. */
  int K_WITH = 12;
  /** RegularExpression Id. */
  int K_COMMA = 13;
  /** RegularExpression Id. */
  int K_DOT = 14;
  /** RegularExpression Id. */
  int K_QUOTE = 15;
  /** RegularExpression Id. */
  int K_DOUBLEQUOTE = 16;
  /** RegularExpression Id. */
  int O_BINARY = 17;
  /** RegularExpression Id. */
  int O_CSV = 18;
  /** RegularExpression Id. */
  int O_TEXT = 19;
  /** RegularExpression Id. */
  int O_FORMAT = 20;
  /** RegularExpression Id. */
  int O_FREEZE = 21;
  /** RegularExpression Id. */
  int O_DELIMITER = 22;
  /** RegularExpression Id. */
  int O_NULL = 23;
  /** RegularExpression Id. */
  int O_HEADER = 24;
  /** RegularExpression Id. */
  int O_QUOTE = 25;
  /** RegularExpression Id. */
  int O_ESCAPE = 26;
  /** RegularExpression Id. */
  int O_FORCE_QUOTE = 27;
  /** RegularExpression Id. */
  int O_FORCE_NOT_NULL = 28;
  /** RegularExpression Id. */
  int O_FORCE_NULL = 29;
  /** RegularExpression Id. */
  int O_ENCODING = 30;
  /** RegularExpression Id. */
  int O_TRUE = 31;
  /** RegularExpression Id. */
  int O_FALSE = 32;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 33;
  /** RegularExpression Id. */
  int IDENTIFIER = 34;
  /** RegularExpression Id. */
  int QUOTED_CHAR = 35;
  /** RegularExpression Id. */
  int SINGLE_CHAR = 36;
  /** RegularExpression Id. */
  int ID = 37;
  /** RegularExpression Id. */
  int DIGIT = 38;
  /** RegularExpression Id. */
  int LETTER = 39;
  /** RegularExpression Id. */
  int LOWER_CASE_LETTER = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"STDIN\"",
    "\"STDOUT\"",
    "\"TO\"",
    "\"FROM\"",
    "\"COPY\"",
    "\"WITH\"",
    "\",\"",
    "\".\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"BINARY\"",
    "\"CSV\"",
    "\"TEXT\"",
    "\"FORMAT\"",
    "\"FREEZE\"",
    "\"DELIMITER\"",
    "\"NULL\"",
    "\"HEADER\"",
    "\"QUOTE\"",
    "\"ESCAPE\"",
    "\"FORCE_QUOTE\"",
    "\"FORCE_NOT_NULL\"",
    "\"FORCE_NULL\"",
    "\"ENCODING\"",
    "\"TRUE\"",
    "\"FALSE\"",
    "<QUOTED_IDENTIFIER>",
    "<IDENTIFIER>",
    "<QUOTED_CHAR>",
    "<SINGLE_CHAR>",
    "<ID>",
    "<DIGIT>",
    "<LETTER>",
    "<LOWER_CASE_LETTER>",
    "\";\"",
    "\"(\"",
    "\")\"",
  };
}
